---
layout: post
title: 云原生时代的运维转型
date: 2022-01-27 20:00
tags:
  - theory
---

## 导读
我司运维采用集中式的组织方式，之前的很长一段时间，研发都将运维职责外包给运维团队来做。


## 传统运维
传统运维的职责，是：将工业制成品组装为服务，并维护其正常运转。工业制成品，包括硬件基础设施IaaS、软件基础设施PaaS、业务应用服务SaaS等。维护服务正常运转、持续运营CO是运维的主要工作，要求达成稳定、成本、安全、效率的多维目标（多快好省）。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20200125/op-model.png)

从某种程度上讲，运维需要依附于业务、才能产生价值。在很多公司，是否理解业务是运维工作者的主要考核项之一。


## 转型背景
当下，公有云使用率越来越高，云原生和DevOps也迅速普及，这造成了传统运维的生存空间不断压缩。主要表现在：

- 外包。使用公有云后，IaaS/PaaS/SaaS基本都服务化了、通过API即可获取，公司只需要保留少量的专业选型和集成能力，大量的硬件、系统、网络、数据库、大数据等运维建设工作由厂商替代原厂完成。
- 转移。云原生技术普及后，DevOps大范围达成，之前只能由专业运维人员完成的交付、变更、监控、容量等管理操作，都可以交给业务研发自助完成了，借助工具、运维职责大量转移到业务研发。
- 替代。公有云的聚集效应、云原生的开源体系，提供了持续向好的平台化前景。平台化提升效率后，同一岗位需要的人工变少；平台化进化到自动化、智能化后，机器就可以替代人工；平台化沉淀专业能力，对操作人员的技术门槛越来越低。平台对人工的替代，还在逐步深化

职责不断向业务研发转移、专业性逐渐被平台替代，面对这样的趋势和事实，固守运营本职只会是死路一条，运维从业者需要转型。


## 组件运维
对于有服务实体的运维角色，统称为组件运维。组件运维，可以包括云服务运维CloudOps、数据库运维DBA、中间件运维MiddlewareOps、大数据运维BigdateOps等。

组件运维的转型，要提升角色认知，把自己从运维角色、调整为组件服务提供方。转型实施，重点应该放在提升组件服务的专业性上，建设思路可以遵循渐进式的洋葱模型，即立足于运营优势、建设ToC化平台、再深入到组件自身专业领域。如下图，

![pict](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20220127/sa-yangcong.png)

既然是组件服务，最重要的就是对外提供服务能力，即图中的运营。在此基础上，聊平台建设、组件自身的专业性深入，才有意义。


## 业务运维
对于依附于业务的运维角色，统称为业务运维。业务运维，可以包括应用运维SRE、安全运维SEC等。业务运维角色，应发挥自身懂业务运维的特长、主动融入到专业知识平台化的进程中，同时积极践行DevOps理念，完成从业务附属、到运维服务提供方OPaS的身份转换。

当前，云原生的领域拼图并不完整，在「应用/服务」视角之外、存在大量的能力空白，特别是向上的业务视角、部门视角、公司视角等，姑且称为**超服务视角**。对于超服务视角，应用开发人员通常没有动力、没有能力主R；部门主管或架构师可以照顾到本部门，但受限于岗位职责、很难扩展到全局。超服务视角是传统业务运维的老战场，具备无与伦比的体验、理解和认知优势，业务运维人员来主R最合适。

这样，业务运维工作者**主导超服务视角建设、提供运维即服务能力OPaS**，既能发挥传统运维的经验优势、又能添补云原生工具领域的空白，会是一个很好的转型方向。如下图。

![pict](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20220127/OPaS.png)

超服务视角的需求场景，包括但不限于：

- 排障止损，跨应用跨部门甚至是公司全局范围的问题排查、故障止损
- 成本管控，公司全局角度的资源利用和成本控制（这个方向可能会独立为FinOps）
- 质量度量，公司全局角度的部署架构度量、流量分布度量、容量度量、服务标准化度量、北极星指标等，事关稳定性
- 规范制定，公司全局角度的运维规范制定、流程落地监督，避免小团队烟囱式建设


除了超服务视角建设，通过工单方式、将现有管理平台安全ToC(运维面)，也是业务运维可以投入的方向。


## 注意事项
- 转型和保守要折中。业务运维ClickOps转型到OPaS，既不会一蹴而就、也不会全员迁徙。总有人要留下来殿后，因为资源更集中，殿后人员会获得更多的横向价值
- 平台是服务能力最有力的承接方式，但绝对不是唯一方式。组织、规范、流程、平台，一样都不能少


---

---

---

## 运维演进
云原生架构逐渐成为行业趋势，运维职责被逐渐转移、替代，边界进一步收缩（未被彻底干掉）。主要表现为：

- 系统运维：硬件基础设施的运维工作转移到了公有云厂商，IaaS真实达成；留给系统运维的工作主要是面向云API的"云资产生命周期管理"，如多云管理、元数据运营等
    - 公有云资产是逻辑资产，其运维特质跟中间件类似，要求深度和精度、要求场景闭环，是不折不扣的专家岗
    - 目前有不少创业公司在做云资产管理，主要集中在编排、运营等方向，尚未形成通用能力
- 应用运维：软件基础设施的运维职责被云原生体系替代。以K8S为代表的PaaS体系已然成熟，公有云厂商已将其定义成新的交互界面；软基础设施工程师角色应运而生，承担了"打通PaaS和我方应用"的建设任务。应用运维工作继续向应用层收缩，更加专注于应用生命周期的运营
    - 应用服务通常数量庞大、在运维视角有广泛的复用性，因此，应用运维更容易在运维子领域建立专业性、然后横向输出解决方案，成为运维架构岗
- 平台体系：公有云场景下的系统运维、云原生架构下的应用运维，因其所负责运维服务的属性（如复用性）、数量等差异，导致了专家岗、架构岗的明显分化。对应的，在运维平台建设方向，也同时存在了场景闭环、横向建设两种思路，这也是由所服务对象的属性差异所致

这里，引用[腾讯刘天斯](https://mp.weixin.qq.com/s/_wwlN7GeF6VkmrK3q5__tw)的一个例子，来形象的描述运维职责的变化：

```
云计算时代的运维就好比组装汽车，客户根据自己的需要，通过PaaS能力，选择匹配的引擎、车轮、离合器等进行拼装，  
客户不用再关心汽车元部件的实现原理。
但，光有汽车是玩不转的，还需要有修路、建加油站、控制交通，运维就是要承担这个角色。
```
