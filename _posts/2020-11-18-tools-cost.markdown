---
layout: post
title: 多云资产成本度量平台
date: 2020-11-18 20:00
tags:
  - tools
---

## 导读
本文主要介绍CH的多云IT资产成本度量平台，要点包括：平台架构、成本分摊、预算管理、成本优化、认知总结等。


## 预设
- 资产全部来自公有云，无自建，下文简称云资产
- 云资产的产品，简称云产品，如：裸金属CPU/GPU、对象存储S3、CDN、流量带宽、视频直播、专线等
- 采用了多云架构，如，公司同时使用了AWS、阿里、腾讯、金山等多家云
- 云厂商按自然月结算费用


## 平台架构
成本度量平台，由四大部分构成：计费、对账、分摊、报表，如下。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-arch.png)


## 计费
计费，是站在甲方的视角，统计各类云产品的用量、费用，用于后续的对账、分摊。如下图。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-jifei.png)

计费场景是计费项、计量、时效性三个维度的组合。计费项、计量的难易程度，主要取决于云产品，如CPU/GPU计费项&计量都简单、大数据服务计费项&计量都很复杂。时效性取决于计费方式，包括CMDB、多云API、日账单、月账单；此四者，计费效果依次变差、实现难度却依次降低。在不考虑全局增益的情况下，我们更倾向于选择实现难度更低的方案、满足计费场景的需求。

计费同时产出用量、费用两组数据。对技术人员来说，用量区分不同产品、更容易理解；对财务人员来说，费用打平多产品、更直观宏观。工作实践也证明，用量、费用两组数据都有很大的用途。


## 对账
对账的目的，是：判断云厂商有没有多收甲方的钱，是为了财务止损。我们通常会将云服务对象分为账号、产品、组件、实例、计费项五个等级，从绝对量、增量两个角度来做对账分析，如下图。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-duizhang.png)

云服务对象的等级设计，取决于云厂商的计费精度，也取决于甲方在对账上的投入(平台+人)。

绝对量分析，既包括云厂商账单自身核对(数据自恰)，也包括跟我方独立计费的对比(逻辑独立链路)。云厂商账单通常由消费、代金券、退款、调账四类够构成。和我方独立计费的对比，通常是对比用量、单价，而不是费用，因为技术人员更擅长用量视角(单价是为了弥补用量和费用之差异)。

增量分析，目的是让人更容易理解账单变化的原因，重在言之有理。因此，增量分析通常是对云账单做月度费用环比，对于费用变化给出合理的用量解释。财务人员是增量分析的主要使用者。


## 预算管理
预算管理，要求财务建立完整的预算管理流程、技术建立可理解的预算预估模型，最后作为目标、约束各业务方向的成本投入。具体如下，

#### 预算提报流程
预算提报和更新流程，关键步骤、参考排期，如下：

> - 10.08 财务发出公司预算启动邮件
> - 10.14 财务组织产研预算启动会
> - 10.18~10.21 运维准备工作
>> - 10.18 规划: 和财务对齐目标，定义里程碑（2H）
>> - 10.18 接口人: 整理预算接口人名单（4H）
>> - 10.18 启动: 发启动通知，建立沟通渠道（1H）
>> - 10.19 基线: 整理预算基线，提供给预算接口人、并答疑（8H）
>> - 10.20 平台: 开放预算更新入口（2H）
>> - 10.20 数据: 更新预算模板之预单和科目（4H）
>> - 10.21 权限: 授权预算接口人（2H）
> - 10.19~11.10 产研提报预算
>> - 10.19~10.26 业务做预算
>> - 10.22~10.26 业务录入预算平台
>> - 10.27~10.28 运维初核预算
>> - 10.28 运维准备预算报表，包括年度、部门、科目对比，单位成本分析等
> - 10.29~11.02 产研内部核对预算
>> - 10.29 运维核对，和财务同步初版
>> - 10.29 架构核对，产出有问题的部门
>> - 11.01 产研核对，产出改进目标
>> - 11.02~11.03 业务调整预算、再次提报
> - 11.03~11.10 财务核对预算
>> - 11.03 财务和架构初核预算
>> - 11.06 财务进行利润中心分摊
>> - 11.10 财务和产研中心核对预算
> - 11.10~12.10 公司核对预算
>> - 11.11~11.25 财务核对公司整体预算
>> - 11.26~12.03 财务和利润中心沟通预算分摊
>> - 12.06~12.20 财务和CEO对预算
> - 12.21~12.30 产研发起预算流程
>> - 12.21 产研中心发起新预算审批
>> - 12.25 CEO审批通过新预算
>> - 12.26 预算平台生效

#### 预算预估模型
为了简化云资产的预算预估，我们采用了简化产品计费、统一产品定价、固化用量模型。具体如下，

- 简化产品计费：每种云产品抽象为一个计费项，简化用户的理解、预算提报。如，
    - CPU机器 抽象为CPU核数，屏蔽机型差异
    - 对象存储 抽象为存储空间，屏蔽掉请求次数、出网流量等计费项
- 统一产品定价：技术人员只提报产品用量，运维做统一定价后、得出预算费用
    - 一旦做到统一定价，就具备了「二级云服务提供商」的主要特点(二级CSP)
- 固化用量模型：用量、业务指标通常能做到公式相关，如
    - 预估用量 = 固定用量 + 业务指标 * "业务/资产-相关系数" * 优化系数，优化系数通常体现了性能优化、架构优化等技术侧主动降成本的效果预期
    - 业务/资产-相关系数，举例：1K次搜索峰值需要1个CPU，1K个学生上课需要1TB的存储空间

#### 预算管理约束
预算管理的工作，无法做到完全自动化，受制于公司战略下的组织结构、业务结构、收支目标等非技术因素。如下图，运维在预算准备阶段至少需要做到权限管理、预算基线准备、预算科目维护，这三个事项无法自动化、甚至无法平台化。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-2.png)

预算追求逻辑自恰，不追求绝对正确。因为，做预算所依赖的公司增长目标、成本目标都是预估值，预算本身很难做到绝对客观。从这个意义上讲，预算更像是一门玄学。


## 分摊
成本分摊，目的是：将云资产消耗的技术成本、分摊到各利润中心；难点在于，**将云资产实例关联到对应的预算单元、并长期保持正确**。

在成本度量系统建设之前，我司已经建成了主要云资产和服务、业务线的关联、且精细维护(至少目标是精心维护)。成本分摊复用了这部分元数据，并通过建立服务、业务线和预算单元的对应关系，预算单元又直接关联成本中心，成本中心按比例分摊到利润中心。具体形式如下：

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-fentan.png)

在计费方面，分摊、对账使用不同的单价。对账使用真实的财务单价，和云服务提供商保持一致、方便对账；分摊使用公司内部约定的预算单价，和预算保持一致、方便做预算目标管理。从这个角度讲，我们对内提供了一套完整的CH云服务，完成了对云服务提供商的二次封装；站在技术人员的视角，分摊的单位是用量、而不是费用。

我司早期，运维团队借助分摊、建立起了完善的资产元数据体系，通过复用已有元数据、聚向建设可复用的元数据，进一步降低了元数据的整体维护成本。


## 报表
整个成本度量体系，就是一个离线数仓的完美模型，报表展示尤其如此。此处直接贴图，略去数仓模型的一万字，不懂请谷歌。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-baobiao.png)


## 成本优化
终于聊到了高潮，但高潮很短。成本优化，同样遵循了解决问题的工程范式: 发现问题 -> 分析问题 -> 抽象模型 -> 度量指标 -> 建设目标 -> 关键路径 -> 组织保障，如下图。

![page.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20201118/zybcost-chengbenyouhua.png)

先看图吧，有时间再解释细节。


## 认知总结
在工具建设、成本管控的过程中，对成本度量平台有如下几个关键认知，

- 价值定位：老板系统、辅助决策，要求数据准确全面、报表灵活多样
    - 数据是关键，数据不准则平台无价值、数据少则平台价值指数递减；报表是价值输出，匹配老板视角
- 数据模型：数据支持多版本，做到元数据可修改、结果可重算（支持指定范围），接近数仓
- 分摊模型：成本分摊的本质是「云服务转卖、二级云服务提供商CSP」，业务只需要知道「CH公有云」，而不需知道背后的云服务提供商，如AWS、阿里、腾讯
- 数据校准：数据校准有两个途径，即两个独立计算的系统做数据对比(路径维度)、同一系统做两个周期的增量分析(时间维度)
- 功能时效性：报表的时效性，取决于数据、而不取决于代码逻辑，同数仓
- 工程范式：发现问题 -> 分析问题 -> 抽象模型 -> 度量指标 -> 建设目标 -> 关键路径 -> 组织保障，组织保障全局最重要
