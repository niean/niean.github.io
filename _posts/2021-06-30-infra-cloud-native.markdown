---
layout: post
title: 云原生架构的一些沉淀
date: 2021-06-30 08:30
tags:
  - thoughts
---

## 导读
本文记录了楼主对云原生架构、理念、技术、产品的一些思考和沉淀。

## 云原生的概念
CNCF对云原生的最新定义，为，

- 计算模型：云原生技术有利于各组织在公有云、私有云、混合云等新型动态环境中构建和运行可弹性伸缩的应用。
- 代表技术：云原生的代表技术包括容器、服务网格、微服务、不可变基础设施、声明式API。
- 架构原则：这些技术能够构建容错性好、易于管理、便于观察的松耦合系统。结合可靠的自动化手段，云原生技术是工程师能够轻松地对系统做出频繁和可预测的重大变更。"

从上述定义看，云原生应该包括云原生技术、云原生产品、云原生架构、云原生开发理念、云原生应用等部分。具体的，

- 云原生产品和技术，需要基于公有云、私有云、混合云的云基础设施（IaaS）
- 云原生架构和开发理念，基于云原生产品和技术来构建、实现
- 云原生应用，基于云原生架构和开发理念构建、实现

云原生这几个部分的关系，大体如下图，
![zone](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20210630/cloud-native-zone.png)


## 云原生脑暴

从能力覆盖来看，云原生更多是计算能力的原生，存储和网络更加服务化、但底层并未波及。对应的，云原生对应用的交付、管理、成本都带来了革命性；对于大数据、数据库等重存储重网络的领域，云原生贡献了新的产品理念、技术、和基础设施能力，但原体系只改良、不革命。

从云服务模型来看，云原生的影响主要集中在IaaS层。具体的，

- 云原生对IaaS形成了降维打击。云原生的产品、技术、架构、理念成为了公有云的新界面。公有云的底座依然是原有IaaS能力，但需要更多的考虑云原生的产品延伸，在运维管理成本、交付效率、资源使用率等方面提供新的界面和支持
- 公有云PaaS层依然相对封闭。不同云PaaS尚未完全打通，部分产品接口标准尚不一致，客观上阻碍了多云架构的推进。这其中，先发厂商"单云绑定、大肥猪不许动"的商业模式，是非常顽固的力量；如大数据体系。同时我们也看到，后发厂商都在积极的拥抱开源、拥抱统一标准，推进PaaS层面的南北向接口统一；如，消息队列、数据库、缓存等。最终，PaaS会迎来交互视角的统一
- SaaS处于最高层，服务交付因IaaS云原生而大大简化，PaaS依然会存在单云绑定的问题。从老美的经历看，中国互联网会出现PaaS变薄、SaaS变厚的趋势

其实，我们并不在乎公有云在底层、内部适配云原生的方式。我们只关注接口、界面等交互视角的统一性，以达成应用的多云能力。


从技术趋势看，

- ServerLess是很好的产品形态，将交付、管理、成本的问题全家桶式解决。目前ServerLess处在产品能力落地期、诸多不完善，预计2-3年后会产生实际效果
- ServiceMesh证明了其在服务治理中的核心地位，但Iatio在大规模场景的统治力在变弱。期待出现一种去中心化的、更加K8S原生的解决方案

