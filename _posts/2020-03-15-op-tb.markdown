---
layout: post
title: 运维建设的一些思考
date: 2020-03-15 21:30
tags:
  - thoughts
---

## 导读
本文将断续、松散的记录，楼主在运维管理和工作实施中的一些思考。

## 2021.05.17 云原生的定义
云原生是一套开放的PaaS建设标准。基本上，向下抽象IaaS资源、在PaaS层约定托管规范、对上呈现应用接口。

K8S是云原生标准的一套开源实现方案，在IaaS资源抽象、PaaS托管规范方面醉的不错，向上的应用接口还在进一步优化中。

K8S不等于云原生。符合标准的公有云、私有云、混合云方案，均可认为是云原生。


## 2021.04.22 对员工是有限责任
TL对团队成员是有限责任。如果一年还没培养起来就放弃吧，不管这人有什么优点；培养不起来，本身就是最大的问题。

我用半年的精力，把人从入门、培养到能做事，接下来一年半始终没能进步到极致。现在想想，他本身就有天花板，早点Fail、让他找到合适的位置更好。心慈，不一定是好事。

## 2021.04.22 他山之石
隔壁的例子。被下属顶替了，不是因为下属太优秀，而是因为上级不再成长。他山之石，历历在目。

## 2021.04.17 人际资源的年代局限
人际资源，有明显的年代局限，一般是上下5年。对应的，个人职业高峰，最多也就维持10年。

跨1到2代、建立年轻化的工作联系，有利于打破上述局限。需要刻意为之。

## 2021.04.16 体系化总结和产出
工作可以很琐碎，但产出必须体系化。体系化，才有可能固化为知识、方法论。

体系化产出，依赖周期性总结。周期可以是天、周、月、季、半年、年，取决于工作环境。月度够用。


## 2021.03.02 高阶招聘
高阶招聘，需要同时做到：调度资源、掌握人脉。且人岗匹配。


## 2021.03.01 刻意练习
体系化的成长，来自：1分培训、2分交流、7分刻意练习。刻意练习，就是带着理论做实战、边实战边吸收理论。


## 2021.02.01 向上管理的职责
中层管理者的向上管理职责之一，在于：为更高层老板，争取决策的时间、资源、主动性。


## 2020.12.20 成果和贡献的平衡
年底打绩效时，发现某些成员的OKR得分远高于/低于日常感受。分析发现，得分过高的成员的OKR往往以"从0到1"的工作为主，得分过低的则以"从1到100"为主。

从0到1，一般是在填补某方面的空白，成果显著；从1到100或者从50到100，一般是在维持运转，默默贡献。现状中，大部分公司、团队、个人，重成果、轻贡献，OKR量化后这个问题更明显。久而久之，没人再愿意做从1到100的事情了，而这正是公司运转的主要投入方面。

如何平衡呢？

- 在绩效结果打分环节，管理者有意识的平衡成果和贡献。我这里采用了"OKR打分为主、组长打分辅助验证"的方式，两种排名差异大的成员重点重新review
- 在绩效目标制定环节，如何平衡成果、贡献的比例，也是需要关注的一件事。比如，从1到100的KR，如何考核其确实在进度


## 2020.12.10 价值来自关键链路节点
如何衡量个人的工作价值？拎出来看看，你是否 "在某个关键价值的必经节点"。

团队间的分工，底线也在于关键节点。


## 2020.11.30 警惕舒适区
今天面试了一位候选人。他有13年运维工具产品/架构相关的工作经历，本次工作希望转入SRE、以实践落地其工具创意。考察发现，该候选人没有完整的运维工具体系知识，相较13年的领域工龄着实可惜。

工具创意可能就是他的舒适区，13年时间沉浸其中，忽略了体系能力的建设。再加上知识更新不及时，就这样失去了竞争优势。想想自己，也是偏执于工具创意，甚至建立起了小范围的优势。后续一不小心，可能就掉在舒适区、走不出来了。

以此为鉴，警惕舒适区、加强定期反思。


## 2020.11.25 关于AIOps的定义
软件的一些"算法逻辑"不代表真正的AI；AI的关键点在于: 自动从数据学习中总结规律，并利用规律(结合当前的环境)给予决策建议。


## 2020.11.17 代偿效应
结论：警惕代偿效应，警惕临时变长期。

再次被安全，再次SYS应急强上，不专业的人补位专业岗位，像极了医学上的代偿效应。什么是代偿效应，就是它不是你本身的目标，它是一个临时性的、应急性的、替代性的解决方案。举一个来自逻辑思维的例子、来证明它的危害：

很多慢性病病人，在早期的时候没有任何症状，看上去非常健康，自我感觉也良好。但是一旦出现症状，一查，就已经是中晚期了。这些病人就很奇怪啊，我明明一直好好的，怎么突然就病得这么重了？很多情况下，这就是代偿导致的。比如说胃癌。现代医学已经发现，胃癌和一种细菌有很大的关系，这种细菌叫做幽门螺旋杆菌。这种细菌一旦感染了胃部，就会持续攻击胃部的细胞，导致胃部细胞的死亡，引起胃炎，最严重的就是胃癌。那最治本的解决方案是啥？当然是消灭这些幽门螺旋杆菌。但是如果我们身体自带的免疫系统做不到，它就会启动一个替代方案，就是让深层的胃部干细胞加速分裂，赶紧补充死亡的细胞。这是啥？这就是代偿啊。这是一个临时性的、替代性的解决方案。那在我们人体的感觉中呢？胃的功能正常进行，啥感觉没有。但是，在你没感觉的同时，这场细菌和胃部细胞的战争其实是越打越激烈的。最后，当人开始有感觉的时候，说明就是代偿功能已经补不上细菌造成的损伤了，这场战争等发现的时候，就真的危险了。

完整文章，参见[这里](https://m.igetget.com/share/course/article?id=RQLYWyjMZoa0J1v58zXp4wvzDbO26B)。


## 2020.09.25 元数据的特点
好的元数据，具备的特征：强依赖、可收敛、可复用、可校验

- 强依赖，至少被1个关键业务路径依赖；
- 可收敛，生成成本可以逐渐降低，数据质量可以逐渐提升；
- 可复用，能被2+个场景使用、实现价值扩展；
- 可校验，在现有元数据体系中，能交叉互验数据的正确性，降低修复更新成本

是否有利于元数据的收敛，是判断一个运营方案好坏的重要指标。如，

- CD审批，上线审批权限点是一个差方案、因为审批权限生成过程收敛成本高
- 服务负责人审批是一个好方案、因为服务负责人是一个可以被精心维护的元数据

说的再激烈一点，元数据不收敛、罪一定在平台(运营方案)~


## 2020.08.14 大规范小规范
规范有大小。大规范一般画出一个轮廓，能给出指导意义；具体落地则需要SRE的个人来执行(小规范)。
SRE个体习惯有差异，对小规范认知不一致，最后可能伤害到大规范的落地效果。这就像开发团队的代码风格治理一样，在小规范实施时，要有机制、拉平SRE的习惯认知。


## 2020.08.01 运维产出的思考
运维工作往往融合了 "技术+事务" 两个特色。事务性工作产出制度流程范式，使新人可以按图索骥、并以叠加式改进。技术性工作产出平台设计，以平台的方式沉淀运维能力(最佳实践)。


## 2020.07.23 做稳定性规划的一些感受
之前一般按照故障处理模型，来做稳定性规划。今年尝试从"对象+方向"双维度来做，效果还不错。一些小的感受如下，

- 预案属于强业务场景，适合按场景闭环、不适合作为一个专项来做
- 容量场景化较弱，适合横向展开。这根涉及容量的场景比较少有关


## 2020.07.19 领导团队的关键点
领导团队的关键点有：看方向，带人，做事。最近一年，在带人、做事方面都算过关，但在看方向上做的较差。
要么主动思考、要么被安排，方向大事容不得一丝懈怠。


## 2020.07.18 刻意练习不能丢
最近半年借口太忙，在刻意练习上投入的很少，导致能力体系进步较少。
回想一路走来，每次实质性突破都有刻意练习的影子。定个小计划，后续每周留2-5个小时做刻意练习，加班很关键。


## 2020.04.15 工具是最好的协作者
工具是运维最佳实践的有效载体，最终都能进化为用户友好的形态。
从这个意义上讲，工具可以协助降低对从业人员的服务心态要求。在工具达到一定能力之前，所谓的服务心态很难维系。


## 2020.04.01 传统Ops和SRE主要区别
Ops倾向于被动执行，而SRE倾向于主动思考


## 2020.03.25 关于分阶段交付
人力有限时，大项目往往要分阶段交付，每个阶段交付1+个相对独立的产品功能。

Dev同学可能对分阶段认识有误区，可能会站在技术或代码开发的角度来分阶段，导致无法持续交付产品功能。这一点需要关注。


## 2020.03.15 一线同事能力较差时，如何保证结果质量
由于历史原因，团队会留下了一些能力较差的一线同事，且主动/被动进化的效果不理想。为了利用这一部分人力，同时达成高质量的结果，团队采用了 架构师带队、一线人员执行、团队集体验收 的合作模式。

架构师是负责人、责任人，协助梳理目标、分解里程碑、制定验收标准、定期检查。一线人员拿到的是一个可执行、能度量的任务，不需要太多思考就能准确实施。架构师定期组织一线员工检查中间状态，整体完成后团队成员一起检查结果、确保效果高质量达成。

关键点：推动被动老员工的个人提升有难度时，可以选择用合理的分工来充分利用人力。
