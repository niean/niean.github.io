---
layout: post
title: 基础设施之运营体系
date: 2024-05-13 22:00
tags:
  - ops
---

## 导读
本文主要介绍基础设施的运营体系建设。


## 目标
基础设施，长期保持高质量、不劣变。覆盖SKU要多，结果要好，投入要省(长期持续) —— 多[快]好省。

![picture.png](https://raw.githubusercontent.com/niean/niean.github.io/master/images/20240514/infraops-arch.jpg)


## 规范
#### 对规范的约束
规范制定，不但事关新增管控、更牵扯存量治理，治理甚至是主要制约因素。规范制定如同立法，应该受到约束、应该遵循基本原则。比如，

- 权责对等(反馈制度)：谁定规范、谁主治理，让规范制定方亲身感受到治理代价，避免个人洁癖(也要区分理想主义)
- 多方监督(分权制度)：被规范辐射到的纵向，参与立法、推动折中，为自己的治理痛点发声、避免被决定
- 充分演绎(简化治理)：新规范要脱胎于现状，使尽量多的现状满足规范、从而降低治理工作量，经验值80%？
- 温和推动(减少入侵)：采取温和的项目管理，维持老功能可用、治理按需排期，不入侵核心业务目标。或组织授权设置治理OKR

典型的BadCase，有，

- NFS不允许跨云挂载：你定规范、拍拍屁股走人了，我被约束、不得不投入治理。NFS跨云访问又如何？
- DevOps只部主云、MQ消费社区原生化、COS桶AK严格对应：资源提供方的一言堂，规范我说了算、使用方你爱用不用。强势中台挤压了上游的议价空间
- LB只能分布在组件子网：现状是60+%的LB分布在普通网段、不在组件子网，这条规范一经制定、就会造成大部分LB需要销毁重建，治理工作量巨大
- 未经组织授权的治理工单：以资源提供方的名义、给使用方安排治理任务，发过通知就算流程合规、可以免责。违背组织分工的原则、破坏使用方的目标计划

对于全新的、没有历史包袱的规范，可以坚持非0即1简单粗暴，不允许模糊空间。防止规范破坏者获利打破纳什均衡。制定和维持规范，需要付出代价。

在技术体系中，权利应该被约束。不受约束的权利就是洪水猛兽，早晚会为祸四方。集权的前期有可能是高效的，但早晚会出现昏君、毁掉大局，即便寿终正寝也一定伴随着思维和组织僵化。呜呼哀哉，巧者近而智者远！


## 治理
运动战、大项目，在解决沉疴痼疾的同时，也能起到很大的运营减熵效果、甚至减熵本身就是最大的效果。


## 演练
#### 演练的哲学模型
类似科学实验，演练的哲学基础是可证伪性。演练通过则继续保持，演练不通过则系统一定无效。


## 一些教训
- 分工不当：高阶缺席顶层设计，如抽象规则、制定SOP
- 目标错误：过分重视平台，错把手段当目标
